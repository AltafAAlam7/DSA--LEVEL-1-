import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;

      Edge(int src, int nbr) {
         this.src = src;
         this.nbr = nbr;
      }
   }
   static class Pair {
      int v;
      int day;

      Pair(int v, int day) {
         this.v = v;
         this.day = day;
      }
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         graph[v1].add(new Edge(v1, v2));
         graph[v2].add(new Edge(v2, v1));
      }

      int src = Integer.parseInt(br.readLine());
      int t = Integer.parseInt(br.readLine());
      
      // write your code here
      boolean[] visited = new boolean[vtces];
      LinkedList<Pair> queue = new LinkedList<>();
      queue.addLast(new Pair(src,1));
      int count=0;
      while(queue.size()>0){
          // remove
          Pair rem = queue.removeFirst();
          //mark
          if(visited[rem.v]==true)
            continue;
            
          visited[rem.v]=true;
          
          //work
          if(rem.day>t){
              break;
          }
          count++;
          
          for(Edge e : graph[rem.v]){
              if(visited[e.nbr]==false){
                  queue.add(new Pair(e.nbr,rem.day+1));
              }
          }
      }
      System.out.println(count);
   }

}