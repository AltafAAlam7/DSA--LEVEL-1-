import java.io.*;
import java.util.*;

public class Main {
   static class Edge{
       int src;
       int nbr;
       
       Edge(int src,int nbr){
           this.src = src;
           this.nbr = nbr;
       }
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int n = Integer.parseInt(br.readLine());
      int k = Integer.parseInt(br.readLine());
      
      // write your code here
      ArrayList<Edge>[] graph = new ArrayList[n];
      for(int i=0;i<n;i++){
        graph[i] = new ArrayList<>();
      }
      for(int i=0;i<k;i++)
      {
        String str = br.readLine();
        int v1 = Integer.parseInt(str.split(" ")[0]);
        int v2 = Integer.parseInt(str.split(" ")[1]);
        graph[v1].add(new Edge(v1,v2));
        graph[v2].add(new Edge(v2,v1));
      }
      ArrayList<ArrayList<Integer>> comps = new ArrayList<>();
      
      // write your code here
      boolean[] visited = new boolean[graph.length];
      for(int v = 0;v<graph.length;v++){
            if(visited[v]==false){
                ArrayList<Integer> comp = new ArrayList<>();
                fillComp(graph,visited,v,comp);
                comps.add(comp);
            }
      }
      int total = 0;
      for(int i=0;i<comps.size();i++){
        total+=comps.get(i).size();
      }
      int count =0;
      int curr_size=0;
      for(int i=0;i<comps.size();i++){
        int clubsize = comps.get(i).size();
        curr_size+=clubsize;
        count+= clubsize*(total-curr_size);
      }
 
      System.out.println(count);
   }
   public static void fillComp(ArrayList<Edge>[] graph, boolean[] visited ,int src,ArrayList<Integer> comp){
       visited[src]= true;
       comp.add(src);
       
       for(int i=0;i<graph[src].size();i++){
           Edge e = graph[src].get(i);
           if(visited[e.nbr]==false){
               fillComp(graph,visited,e.nbr,comp);
           }
       }
   }
}